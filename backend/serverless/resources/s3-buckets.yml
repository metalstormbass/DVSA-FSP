Resources:

  S3BucketFeedbackBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: {'Fn::Join': ['', ['dvsa-feedback-bucket-', {Ref: 'AWS::AccountId'}]]}
      # Set the CORS policy
      CorsConfiguration:
        CorsRules:
          - AllowedOrigins:
              - '*'
            AllowedHeaders:
              - '*'
            AllowedMethods:
              - GET
              - PUT
              - POST
              - DELETE
              - HEAD
            MaxAge: 3000

  S3BucketReceiptsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: {'Fn::Join': ['', ['dvsa-receipts-bucket-', {Ref: 'AWS::AccountId'}]]}
      # Set the CORS policy
      CorsConfiguration:
        CorsRules:
          -
            AllowedOrigins:
              - '*'
            AllowedHeaders:
              - '*'
            AllowedMethods:
              - GET
              - PUT
              - POST
              - DELETE
              - HEAD
            MaxAge: 3000

  LambdaPermissionFeedbackBucketS3:
    Type: "AWS::Lambda::Permission"
    Properties:
      FunctionName:
        "Fn::GetAtt":
          - FeedbackUploadsLambdaFunction
          - Arn
      Principal: "s3.amazonaws.com"
      Action: "lambda:InvokeFunction"
      SourceAccount:
        Ref: AWS::AccountId
      SourceArn: {'Fn::Join': ['', ['arn:aws:s3:::dvsa-feedback-bucket-', {Ref: 'AWS::AccountId'}]]}

  S3BucketfeedbackPermissions:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket: {'Fn::Join': ['', ['dvsa-feedback-bucket-', {Ref: 'AWS::AccountId'}]]}
        PolicyDocument:
          Statement:
            -
              Sid: "PublicWriteFeedbackStatement"
              Principal: "*"
              Action:
                - s3:PutObject
                - s3:PutObjectAcl
                - s3:GetObject
                - s3:DeleteObject
              Effect: Allow
              Resource: {'Fn::Join': ['', ['arn:aws:s3:::dvsa-feedback-bucket-', {Ref: 'AWS::AccountId'}, '/*']]}
            -
              Sid: "AdminListFeedbackStatement"
              Principal:
                AWS:
                  Fn::GetAtt:
                    - dvsaAdminRole
                    - Arn
              Action:
                - s3:*
              Effect: Allow
              Resource: {'Fn::Join': ['', ['arn:aws:s3:::dvsa-feedback-bucket-', {Ref: 'AWS::AccountId'}]]}

  LambdaPermissionReceiptsBucketS3:
    Type: "AWS::Lambda::Permission"
    Properties:
      FunctionName:
        "Fn::GetAtt":
          - SendReceiptLambdaFunction
          - Arn
      Principal: "s3.amazonaws.com"
      Action: "lambda:InvokeFunction"
      SourceAccount:
        Ref: AWS::AccountId
      SourceArn: {'Fn::Join': ['', ['arn:aws:s3:::dvsa-receipts-bucket-', {Ref: 'AWS::AccountId'}]]}

  S3BucketPermissions:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket: {'Fn::Join': ['', ['dvsa-receipts-bucket-', {Ref: 'AWS::AccountId'}]]}
        PolicyDocument:
          Statement:
            - 
              Sid: "PublicWriteReceiptsStatement"
              Principal: "*"
              Action:
                - s3:PutObject
                - s3:PutObjectAcl
                - s3:GetObject
                - s3:DeleteObject
              Effect: Allow 
              Resource: {'Fn::Join': ['', ['arn:aws:s3:::dvsa-receipts-bucket-', {Ref: 'AWS::AccountId'}, '/*']]}
            - 
              Sid: "AdminListReceiptsStatement"
              Principal:
                AWS:
                  Fn::GetAtt:
                    - dvsaAdminRole
                    - Arn
              Action:
                - s3:*
              Effect: Allow 
              Resource: {'Fn::Join': ['', ['arn:aws:s3:::dvsa-receipts-bucket-', {Ref: 'AWS::AccountId'}]]}
